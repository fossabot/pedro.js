version: '3.1'

networks:
  devenv-network-pedrojs:

volumes:
  esdata01:
    driver: local

services:
  redis:
    container_name: devenv_redis_pedrojs
    image: redis:6
    command: redis-server
    restart: always
    ports:
      - "6379:6379"
    networks:
      - devenv-network-pedrojs

  mysql:
    container_name: devenv_mysql_pedrojs
    image: mysql:8.0.26
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example
    volumes:
      - /opt/dev/pedrojs/mysql_data:/var/lib/mysql
      - ./database/mysql/schema.sql:/docker-entrypoint-initdb.d/1_schema.sql
      - ./database/mysql/table.sql:/docker-entrypoint-initdb.d/2_table.sql
    ports:
      - "3306:3306"
    networks:
      - devenv-network-pedrojs

  postgres:
    container_name: devenv_postgres_pedrojs
    image: postgres:13.4
    restart: always
    environment:
      POSTGRES_PASSWORD: example
    volumes:
      - /opt/dev/pedrojs/postgres_data:/var/lib/postgresql/data
      - ./database/postgres/database.sql:/docker-entrypoint-initdb.d/1_database.sql
      - ./database/postgres/table.sql:/docker-entrypoint-initdb.d/2_table.sql
    ports:
      - "5432:5432"
    networks:
      - devenv-network-pedrojs

  mongo:
    container_name: devenv_mongodb_pedrojs
    image: mongo:4.4.10
    command: --auth
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: test
    volumes:
      - /opt/dev/pedrojs/mongodb_data:/data/collection
      - ./database/mongodb/user.js:/docker-entrypoint-initdb.d/1_user.js
    ports:
      - "27017:27017"
    networks:
      - devenv-network-pedrojs

  mongo-express:
    container_name: devenv_mongo_express_pedrojs
    image: mongo-express:0.54.0
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
    networks:
      - devenv-network-pedrojs

  adminer:
    container_name: adminer_pedrojs
    image: adminer:latest
    restart: always
    ports:
      - "8080:8080"
    networks:
      - devenv-network-pedrojs

  elasticsearch:
    image: elasticsearch:7.14.2
    container_name: devenv_elasticsearch_pedrojs
    restart: always
    environment:
      - discovery.type=single-node
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - devenv-network-pedrojs

  kibana:
    image: kibana:7.14.2
    container_name: devenv_kibana_pedrojs
    restart: always
    environment:
      #- I18N_LOCALE=zh-CN
      - XPACK_GRAPH_ENABLED=true
      - TIMELION_ENABLED=true
      - XPACK_MONITORING_COLLECTION_ENABLED=true
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=changeme
    ports:
      - "5601:5601"
    networks:
      - devenv-network-pedrojs
    depends_on:
      - elasticsearch

  minio1:
    container_name: devenv_minio_1_pedrojs
    image: minio/minio:latest
    restart: always
    volumes:
      - /opt/dev/pedrojs/minio/data1-1:/data1
      - /opt/dev/pedrojs/minio/data1-2:/data2
    ports:
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server http://minio{1...4}/data{1...2} --console-address ":9001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - devenv-network-pedrojs

  minio2:
    container_name: devenv_minio_2_pedrojs
    image: minio/minio:latest
    restart: always
    volumes:
      - /opt/dev/pedrojs/minio/data2-1:/data1
      - /opt/dev/pedrojs/minio/data2-2:/data2
    ports:
      - "9002:9002"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server http://minio{1...4}/data{1...2} --console-address ":9002"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - devenv-network-pedrojs

  minio3:
    container_name: devenv_minio_3_pedrojs
    image: minio/minio:latest
    restart: always
    volumes:
      - /opt/dev/pedrojs/minio/data3-1:/data1
      - /opt/dev/pedrojs/minio/data3-2:/data2
    ports:
      - "9003:9003"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server http://minio{1...4}/data{1...2} --console-address ":9003"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - devenv-network-pedrojs

  minio4:
    container_name: devenv_minio_4_pedrojs
    image: minio/minio:latest
    restart: always
    volumes:
      - /opt/dev/pedrojs/minio/data4-1:/data1
      - /opt/dev/pedrojs/minio/data4-2:/data2
    ports:
      - "9004:9004"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server http://minio{1...4}/data{1...2} --console-address ":9004"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - devenv-network-pedrojs
